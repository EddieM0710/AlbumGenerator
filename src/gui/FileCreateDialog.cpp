/////////////////////////////////////////////////////////////////////////////
// Name:        FileCreateDialog.cpp
// Purpose:     
// Author:      Eddie Monroe
// Modified by: 
// Created:     Fri 20 Jan 2023 19:33:48 CST
// RCS-ID:      
// Copyright:   
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks ( unregistered ), Fri 20 Jan 2023 19:33:48 CST

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "FileCreateDialog.h"


#include <wx/filepicker.h>
#include <wx/filectrl.h>
#include "utils/Settings.h"
#include "Defs.h"

//#define wxUSE_FILECTRL 1
////@begin XPM images
////@end XPM images


/*
 * FileCreateDialog type definition
 */

IMPLEMENT_DYNAMIC_CLASS( FileCreateDialog, wxDialog )


/*
 * FileCreateDialog event table definition
 */

BEGIN_EVENT_TABLE( FileCreateDialog, wxDialog )

////@begin FileCreateDialog event table entries
    EVT_BUTTON( wxID_CANCEL, FileCreateDialog::OnCancelClick )
    EVT_BUTTON( wxID_OK, FileCreateDialog::OnOKClick )
////@end FileCreateDialog event table entries

END_EVENT_TABLE( )


/*
 * FileCreateDialog constructors
 */

FileCreateDialog::FileCreateDialog( )
{ 
    Init( );
}

FileCreateDialog::FileCreateDialog( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{ 
    Init( );
    Create( parent, id, caption, pos, size, style );
}


/*
 * FileCreateDialog creator
 */

bool FileCreateDialog::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{ 
////@begin FileCreateDialog creation
    SetExtraStyle( wxWS_EX_VALIDATE_RECURSIVELY | wxWS_EX_BLOCK_EVENTS );
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls( );
    if ( GetSizer( ) )
    { 
        GetSizer( )->SetSizeHints( this );
    }
    Centre( );
////@end FileCreateDialog creation
    return true;
}


/*
 * FileCreateDialog destructor
 */

FileCreateDialog::~FileCreateDialog( )
{ 
////@begin FileCreateDialog destruction
////@end FileCreateDialog destruction
}


/*
 * Member initialisation
 */

void FileCreateDialog::Init( )
{ 
    
    m_defaultDirectory = wxEmptyString; 
    m_defaultFilename = wxEmptyString; 
    m_wildCard = wxFileSelectorDefaultWildcardStr;
////@begin FileCreateDialog member initialisation
////@end FileCreateDialog member initialisation
}


/*
 * Control creation for FileCreateDialog
 */

void FileCreateDialog::CreateControls( )
{    
////@begin FileCreateDialog content construction
    // Generated by DialogBlocks, Fri 20 Jan 2023 19:39:23 CST ( unregistered )

    FileCreateDialog* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer( wxVERTICAL );
    itemDialog1->SetSizer( itemBoxSizer2 );

    wxBoxSizer* itemBoxSizer1 = new wxBoxSizer( wxHORIZONTAL );
    itemBoxSizer2->Add( itemBoxSizer1, 0, wxGROW | wxALL, 5 );

    m_fileCtrl = new wxFileCtrl( this, ID_FILECREATEDIALOG, m_defaultDirectory, m_defaultFilename, m_wildCard, wxFD_SAVE );
    itemBoxSizer2->Add( m_fileCtrl, 1, wxGROW | wxALL, 5 );

    wxBoxSizer* itemBoxSizer3 = new wxBoxSizer( wxHORIZONTAL );
    itemBoxSizer2->Add( itemBoxSizer3, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5 );

    wxButton* itemButton4 = new wxButton( itemDialog1, wxID_CANCEL, _( "Cancel" ), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer3->Add( itemButton4, 0, wxALIGN_CENTER_VERTICAL | wxALL, 5 );

    wxButton* itemButton5 = new wxButton( itemDialog1, wxID_OK, _( "OK" ), wxDefaultPosition, wxDefaultSize, 0 );
    itemBoxSizer3->Add( itemButton5, 0, wxALIGN_CENTER_VERTICAL | wxALL, 5 );

////@end FileCreateDialog content construction
}


/*
 * Should we show tooltips?
 */

bool FileCreateDialog::ShowToolTips( )
{ 
    return true;
}

/*
 * Get bitmap resources
 */

wxBitmap FileCreateDialog::GetBitmapResource( const wxString& name )
{ 
    // Bitmap retrieval
////@begin FileCreateDialog bitmap retrieval
    wxUnusedVar( name );
    return wxNullBitmap;
////@end FileCreateDialog bitmap retrieval
}

/*
 * Get icon resources
 */

wxIcon FileCreateDialog::GetIconResource( const wxString& name )
{ 
    // Icon retrieval
////@begin FileCreateDialog icon retrieval
    wxUnusedVar( name );
    return wxNullIcon;
////@end FileCreateDialog icon retrieval
}


/*
 * wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL
 */

void FileCreateDialog::OnCancelClick( wxCommandEvent& event )
{ 
////@begin wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL in FileCreateDialog.
    // Before editing this code, remove the block markers.
    event.Skip( );
////@end wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL in FileCreateDialog. 
}
wxString FileCreateDialog::GetPath( ){ return m_path; };
wxString FileCreateDialog::GetFile( ){ return m_file; };
wxString FileCreateDialog::GetDir( ){ return m_dir; };

void FileCreateDialog::OnOKClick( wxCommandEvent& event )
{ 
    m_path = m_fileCtrl->GetPath( );
    m_file = m_fileCtrl->GetFilename( );
    m_dir = m_fileCtrl->GetDirectory( );
    wxFileName prjFile( m_path );
    if ( prjFile.Exists( ) )
    { 
         wxMessageDialog* dlg = new wxMessageDialog( 
            this, 
            wxT( "The selected file exists. \n"\
                "Select \"OK\" to overwrite the existing file losing the contents.\n"\
                "Or select \"Cancel\" to choose another name.\n" ), 
            wxT( "Warning! File Exists.\n" ), 
            wxOK | wxCANCEL | wxCENTER );
        int rsp = dlg->ShowModal( );
        if ( rsp == wxID_CANCEL )
        { 
            return;
        }     
    }
////@begin wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL in FileCreateDialog.
    // Before editing this code, remove the block markers.
   event.Skip( );
////@end wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_CANCEL in FileCreateDialog. 
}


/**
 * @file gui/LabeledTextBox.h
 * @author Eddie Monroe ()
 * @brief
 * @version 0.1
 * @date 2021-02-25
 *
 * @copyright Copyright (c) 2021
 *
 **************************************************/


#ifndef _LABLEDTEXTBOX_H_
#define _LABLEDTEXTBOX_H_

 /*
  * Includes
  */
#include "gui/GuiDefs.h"


  /*
   * Forward declarations
   */
namespace Catalog { class Stamp; };

/*
 * Control identifiers
 */
#define ID_TEXTCTRL ID_LABLEDTEXTBOX+1
#define SYMBOL_LABELEDTEXTBOX_STYLE wxTAB_TRAVERSAL
#define SYMBOL_LABELEDTEXTBOX_TITLE _( "LabledTextBox" )
#define SYMBOL_LABELEDTEXTBOX_IDNAME ID_LABLEDTEXTBOX
#define SYMBOL_LABELEDTEXTBOX_SIZE wxDefaultSize
#define SYMBOL_LABELEDTEXTBOX_POSITION wxDefaultPosition

 /*
  * LabeledTextBox class declaration
  */

class LabeledTextBox: public wxPanel
{
  DECLARE_DYNAMIC_CLASS( LabeledTextBox )
  DECLARE_EVENT_TABLE( )

public:
  // Constructors
  /**
   * @brief Default Constructor a new LabeledTextBox object
   * @details Must be used in conjunction with Create.
   *
   **************************************************/
  LabeledTextBox( );

  /**
   * @brief Construct a new LabeledTextBox object
   *
   * @param  parent	The parent window.
   * @param  id	An identifier for the panel. wxID_ANY is taken to mean a default.
   * @param  pos	The panel position. The value wxDefaultPosition indicates a default position, chosen by either the windowing system or wxWidgets, depending on platform.
   * @param  size	The panel size. The value wxDefaultSize indicates a default size, chosen by either the windowing system or wxWidgets, depending on platform.
   * @param  style	The window style.
   * @see wxPanel.
   **************************************************/
  LabeledTextBox( wxWindow* parent,
    wxWindowID id = SYMBOL_LABELEDTEXTBOX_IDNAME,
    const wxPoint& pos = SYMBOL_LABELEDTEXTBOX_POSITION,
    const wxSize& size = SYMBOL_LABELEDTEXTBOX_SIZE,
    long style = SYMBOL_LABELEDTEXTBOX_STYLE );

  /**
   * @brief  Used for two-step panel construction.
   * Use with default constructor.
   *
   * @param  parent	The parent window.
   * @param  id	An identifier for the panel. wxID_ANY is taken to mean a default.
   * @param  pos	The panel position. The value wxDefaultPosition indicates a default position, chosen by either the windowing system or wxWidgets, depending on platform.
   * @param  size	The panel size. The value wxDefaultSize indicates a default size, chosen by either the windowing system or wxWidgets, depending on platform.
   * @param  style	The window style.
   * @return bool
   *
   **************************************************/
  bool Create( wxWindow* parent, wxWindowID id = SYMBOL_LABELEDTEXTBOX_IDNAME,
    const wxPoint& pos = SYMBOL_LABELEDTEXTBOX_POSITION,
    const wxSize& size = SYMBOL_LABELEDTEXTBOX_SIZE,
    long style = SYMBOL_LABELEDTEXTBOX_STYLE );

  // Destructor
  /**
   * @brief Destroy the Labeled Text Box object
   * 
   **************************************************/
  ~LabeledTextBox( );

  /**
   * @brief   Initialises member variables
   *
   **************************************************/
  void Init( );

  /**
   * @brief Creates the controls and sizers
   *
   **************************************************/
  void CreateControls( );

  // LabeledTextBox event handler declarations

 // wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TEXTCTRL
  void OnTextctrlTextUpdated( wxCommandEvent& event );

 /**
  * @brief Retrieves bitmap resources
  *
  * @param  name (autogenerated. Dummy.)
  * @return wxBitmap null
  **************************************************/
  wxBitmap GetBitmapResource( const wxString& name );

  /**
   * @brief Get the Icon Resource objectRetrieves icon resources
   *
   * @param  name (autogenerated. Dummy.)
   * @return wxIcon null
   **************************************************/
  wxIcon GetIconResource( const wxString& name );


 /**
  * @brief Should we show tooltips?
  * 
  * @return bool 
  **************************************************/
  static bool ShowToolTips( );

/**
 * @brief Set the Stamp object
 * 
 * @param stamp 
 * @param type 
 **************************************************/
  void Setup( wxString label, wxString value );

/**
 * @brief Get the value in the ctrl
 * 
 * @return wxString 
 **************************************************/
  wxString GetValue( );

  /**
   * @brief Set the Width object
   * 
   * @param width 
   **************************************************/
  void SetValue( wxString value ) 
  {
      m_value->SetValue( value );
      m_value->SetModified( false );
  };
  bool IsModified( ) { return m_value->IsModified( ); };


 private:

  wxStaticText* m_label; ///< 
  wxWindow* m_parent; ///< 
  wxWindowID m_id; ///< 
  wxTextCtrl* m_value; ///< 
//  Catalog::DataTypes m_type; ///< 
};

#endif
// _LABLEDTEXTBOX_H_
